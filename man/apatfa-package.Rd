% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apatfa-package.R
\docType{package}
\name{apatfa-package}
\alias{apatfa-package}
\alias{_PACKAGE}
\title{apatfa: Generates APA Tables, Figures, and Appendix Sections}
\description{
Generates an output Word file (docx) containing bookmarked content (tables, figures, and appendices) numbered and organized in APA style sections. In each output section, the content is ordered by the first reference to the content within an input Word file. The output file is designed to be included into the input file using an "IncludeText" field in Word so that bookmarks in the output file can be referenced from the input file. This package primarily uses the officer and flextable packages, but the difference here is the obsession with conforming to the APA style guide.
}
\details{
The \code{apatfa} (a-pat-fa) package automates the creation of "Tables",
"Figures", and "Appendix" sections for scholarly papers written in
MS Word using the APA style guide.  The name \code{apatfa} is an abbreviation
for American Psychological Association Tables, Figures, and Appendices.
According to APA style, tables
and figures can either be placed within the body of the paper or
they can be grouped into end sections.  The \code{apatfa} package takes the
approach of always putting tables and figures in end sections (along
with the appendices) in order to keep a clear separation between
input and output documents in the document workflow.  Your manually
entered body content is kept in an input docx file and the
content generated by R is kept in a separate output docx file.  The
output docx file is then included (by reference, with auto-refresh)
back into the input docx file by using the \code{IncludeText} feature of
Word.

The main function \code{apa_docx()} generates an output docx file
containing bookmarked content (tables, figures, and appendices)
numbered and organized in APA style sections.  Within each output
section, the content is ordered by the first bookmark reference to
the content from within the input docx file.  After the output file is
included into the end of the input file using a Word
\code{IncludeText} field, the bookmarked content in the
output docx file will be available for reference from within the
input docx file in the usual way (by using the
\verb{Word > Insert > Cross Reference > Bookmark}
menu).

This package primarily uses the \code{officer} and \code{flextable} packages, but
the difference here is the obsession with conforming to the APA
style guide.  For example, in APA style, numeric table columns
should be center-aligned and at the same time should be
decimal-aligned, which flextables do not support, while \code{apatfa}
supports that and does it by default.

The \code{apatfa} package uses the \code{officer} package to read and write docx
files, uses the \code{flextable} package to style tables, and uses the
\code{ggplot2} package to style figures.  I really appreciate the work
of David Gohel and the other contributors to the \code{officer} and
\code{flextable} packages.

Here are the basic steps for using \code{apatfa} to create a paper:
\itemize{
\item To get started, download (usually from your company or institution)
a Word (docx) file containing a title page template, headers,
footers, and pre-defined APA styles for paragraphs and fonts.  To
achieve seamless operation with \code{apatfa}, check the following settings
within the input docx file:
\itemize{
\item Ensure that the default
paragraph style is named 'Normal' and uses the 'Times New Roman'
12pt font with double-spaced lines, left-aligned, with 0.5"
indentation for the first line.
\item Ensure that a paragraph style named 'Section' is defined based on
the 'Normal' style but bold, center-aligned, and with the
'Begin on new page' option enabled.
\item Ensure that a paragraph style named 'Caption' is defined based on
the 'Normal' style but bold, left-aligned, and with 0" indentation
for the first line.  Turn off any auto-numbering because \code{apatfa}
will
directly number the content in the right order using plain text.
\item For convenience, define a font style named 'Code' in the
'Courier New"
10pt font and
use that to style factor levels and code fragments within the body
of the document because \code{apatfa} will do the same for factor levels
in the output tables and figures and for code listings in the
appendices.
\item Note that you don't need to worry about defining font settings for
figure text
because all figures will be in the output docx file only and the
figure text
will be styled (by default) using Arial 12pt by \code{apatfa}.
}
\item Use \verb{Word > Insert > Quick Parts > Field}
to insert an \verb{\{IncludeText "output_file.docx"\}} field right after
the 'References'
section in your paper.  Note that \code{apatfa} does not attempt to
automate generation of
the 'References' section because there are several good reference
management tools available that integrate directly into the
\code{Word > References}
menu.
\item Install and load the \code{apatfa} package in R:
\itemize{
\item \code{install.packages("devtools")}
\item \code{install_github("toddagood/apatfa")}
\item \code{library(apatfa)}
}
\item Ensure that Arial, Courier New, and Times New Roman
fonts are installed on your computer (such as in the Windows font
registry),
that the \code{extrafont} R package is installed, and that
\code{extrafont::loadfonts()}
can load those fonts.
Confirm that the fonts have been loaded by calling
\code{extrafont::fonts()} in R.
\item Create a simple 'R script' (not 'R Markdown' or 'R Notebook')
containing
the following calls:
\itemize{
\item Call \code{get_styles() -> styles} to get a customizable styles list.
\item Call \code{set_apa_defaults()} to set APA themes as the defaults for
flextables and ggplots.
\item Call \code{init_tfas()} to initialize/reset the list of table,
figure, and appendix content.
\item Call \code{add_styling(styles, df) -> styles} to add automatic
styling for column names and values in a data frame based on
the class of the column (factor, logical, numeric, string) or
directly manipulate the styles list to adjust styling as needed.
\item Call \code{tibble(...) \%>\% flextable() \%>\% styler(styles)} to create
an APA styled flextable.  Numeric columns will be center-aligned
and decimal aligned by default.  The \code{styles} list will control
other
styling options.  The styling can also be touched-up using
\code{flextable} functions if needed.
\item Short-cuts are available to create specially formatted analysis
result tables.  For example: \code{aov(...) \%>\% as_flextable_aov()}.
\item Call
\code{add_table(x, bookmark, title, styles, notes = NULL, wide = FALSE, ...)}
to add an APA styled flextable, \code{x}, as a bookmarked table with
the given \code{title}, \code{styles}, and \code{notes}. If the table is wide, use
\code{wide = TRUE} to display that table in landscape orientation.
There are functions available to assist with preparing the title
and notes args. The \code{bookmark} string must start with "t" (for
table) and be less than 40 characters long.
\item Call
\code{add_figure(fig, bookmark, title, styles, notes = NULL, ...)}
to add a ggplot as a bookmarked figure with the given \code{title},
\code{styles}, and \code{notes}.  If the figure is wide, use \code{wide = TRUE} to
display that figure in landscape orientation.  The
\code{bookmark} string must start with "f" (for figure) and be less than
40 characters long.
\item Call \code{add_appendix(bookmark, fun, wide = FALSE)}
to add a bookmarked appendix.  The bookmark string must start
with "a" (for appendix) and be less than 40 characters long.
The \code{fun} function must accept an
rdocx object and use commands from the \code{officer}
package to add appendix content and return the updated rdocx object.
Within the \code{fun} function, you can use add_md_normal() to add 'Normal'
style paragraphs to the appendix with markdown styling support
and use add_code_file() to add the contents of a
source-code file to the appendix as 'Code' styled paragraphs (Courier
New, 10pt).
\item Call \code{apa_docx("input_file.docx", "output_file.docx")} which will
read the bookmark references from the input docx file and generate
the output docx file with the referenced tables, figures, and
appendices arranged in the right order.  As a short-hand notation,
calling \code{apa_docx(here = function() {})} from within an R script
named \code{paper_name.R} will automatically use \code{paper_name.docx} as the
input file and \code{paper_name.tfa.docx} as the output file.  So a
convenient approach is to create an R project per paper and
name the input files \code{paper.docx} and \code{paper.R} and the output file
will be \code{paper.tfa.docx}, which you will include into \code{paper.docx}.
}
\item Once the output file has been generated, open the input docx file,
and if the \code{IncludeText} field does not auto-update then press
\code{Ctrl-A} (to select all) once and press \code{F9} (to update all fields) twice.
\item Use \verb{Word > Insert > Cross Reference} to insert or remove references to
bookmarks defined in the included file.  Regenerate the output docx
file after adding, removing, or re-ording bookmark references.
}

The documentation for the functions can be opened with the
command \code{help(package = "apatfa")}.

To learn more about \code{apatfa}, start with the vignettes (coming soon):
\code{browseVignettes(package = "apatfa")}.
}
\seealso{
\url{https://github.com/toddagood/apatfa/}

\url{https://github.com/davidgohel/flextable/}

\url{https://github.com/davidgohel/officer/}
}
\author{
\strong{Maintainer}: Todd Goodrich \email{toddagood@gmail.com}

}
\keyword{internal}
